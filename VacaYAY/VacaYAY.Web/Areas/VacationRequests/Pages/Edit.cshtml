@page
@using VacaYAY.Data.Models;
@model VacaYAY.Web.Areas.VacationRequests.EditModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<div class="row justify-content-between">
    <div class="col-md-4">
        <h4>Vacation request for @(Model.VacationRequestDTO.Employee.FirstName + " " + Model.VacationRequestDTO.Employee.LastName)</h4>
        <form method="post">
            @Html.HiddenFor(m => m.VacationRequestDTO.Id)
            <div class="form-floating mb-3">
                @Html.DropDownListFor(m => m.VacationRequestDTO.LeaveType.Id, new SelectList(@Model.LeaveTypes, nameof(LeaveType.Id), nameof(LeaveType.Name)),
                new {@class="form-control dropdown-toggle"})
                <label for="LeaveTypeId">Leave type</label>
            </div>

            <div class="form-floating mb-3">
                <textarea asp-for="VacationRequestDTO.Comment"
                          class="form-control"
                          readonly="@(!Model.IsSameEmployeeAsLoggedInOne)"></textarea>
                <label asp-for="VacationRequestDTO.Comment"></label>
                <span asp-validation-for="VacationRequestDTO.Comment" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="VacationRequestDTO.StartDate"
                       type="date" class="form-control" min="@DateTime.Now.Date.ToString("yyyy-MM-dd")"
                       readonly="@(!Model.IsSameEmployeeAsLoggedInOne)" />
                <label for="VacationRequest.StartDate">Vacation start date</label>
                <span asp-validation-for="VacationRequestDTO.StartDate" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="VacationRequestDTO.EndDate"
                       type="date" class="form-control" min="@DateTime.Now.Date.AddDays(1).ToString("yyyy-MM-dd")"
                       readonly="@(!Model.IsSameEmployeeAsLoggedInOne)" />
                <label for="VacationRequestDTO.EndDate">Vacation end date</label>
                <span asp-validation-for="VacationRequestDTO.EndDate" class="text-danger"></span>
            </div>
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-floating mb-3">
                <input type="submit" asp-page-handler="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
    <div class="col-md-4">
        <h4>Vacation request review</h4>
        @if (Model.VacationRequestDTO.VacationReview.Id == 0 && !Model.IsLoggedInEmployeeAdmin)
        {
            <h5>Not reviewed yet</h5>
        }
        else
        {
            <form method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                @Html.HiddenFor(m => m.VacationRequestDTO.VacationReview.Id)
                @Html.HiddenFor(m => m.VacationRequestDTO.Id)
                <div class="form-floating mb-3">
                    <div class="checkbox">
                        @if (Model.IsLoggedInEmployeeAdmin)
                        {
                            <label>
                                @Html.CheckBoxFor(m => m.VacationRequestDTO.VacationReview.Approved)
                                &nbsp;
                                @Html.DisplayNameFor(m => m.VacationRequestDTO.VacationReview.Approved)
                            </label>
                        }
                        else
                        {
                            @(Model.VacationRequestDTO.VacationReview.Approved ? "Approved" : "Rejected")
                        }
                    </div>
                </div>
                <div class="form-floating mb-3">
                    <textarea readonly="@(!Model.IsLoggedInEmployeeAdmin)"
                              asp-for="VacationRequestDTO.VacationReview.Comment" class="form-control"></textarea>
                    <label asp-for="VacationRequestDTO.VacationReview.Comment"></label>
                    <span asp-validation-for="VacationRequestDTO.VacationReview.Comment" class="text-danger"></span>
                </div>
                @if (Model.IsLoggedInEmployeeAdmin)
                {
                    <div class="form-floating mb-3">
                        <button id="vacationRequestReviewSubmit" asp-page-handler="UpsertVacationRequestReview" type="submit" class="w-100 btn btn-primary">
                            @(Model.VacationRequestDTO.VacationReview?.Id != 0 ? "Edit" : "Create")
                        </button>
                    </div>
                    @if (Model.VacationRequestDTO.VacationReview is not null && Model.VacationRequestDTO.VacationReview?.Id != 0)
                    {
                        <div class="form-floating mb-3">
                            <button id="vacationRequestReviewDelete" asp-page-handler="DeleteVacationRequestReview" type="submit" class="w-100 btn btn-danger">Delete</button>
                        </div>
                    }
                }
            </form>
        }
    </div>
</div>

<div>
    <a asp-page="./Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
            }
